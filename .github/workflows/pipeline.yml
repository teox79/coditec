name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Questo consente la scrittura sul repository, incluso il push di tag e modifiche

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Usa la versione aggiornata

    - name: Set up Node.js
      uses: actions/setup-node@v4  # Usa Node.js 20
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build the project
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: npm run build:production
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        #VITE_PUBLIC_URL: 'coditec'

    # Semantic Release: solo sui push su main, NON nelle pull request
    - name: Run Semantic Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Deploy solo su push su main
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist

    - name: Deploy to ftp-deploy branch
      run: |
        # Configura Git
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
    
        # Inizializza il branch ftp-deploy
        git checkout -b ftp-deploy || git checkout ftp-deploy
    
        # Rimuovi tutti i file nella root del branch tranne la cartella .git
        find . -maxdepth 1 ! -name '.git' ! -name '.' -exec rm -rf {} +
    
        # Assicurati che la cartella dist esista prima di procedere
        if [ -d "dist" ]; then
          # Sposta i contenuti di dist nella root
          mv dist/* ./
          rm -rf dist
    
          # Aggiungi tutti i file e fai il commit
          git add .
          git commit -m "Deploy to ftp-deploy branch" || echo "No changes to commit"
    
          # Push sul branch ftp-deploy
          git push -f origin ftp-deploy
        else
          echo "La cartella dist non esiste. La build potrebbe non essere riuscita."
          exit 1
        fi
      shell: /usr/bin/bash -e {0}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      

    # Deploy via FTP
    - name: Deploy to FTP
      if: github.ref == 'refs/heads/main'  # Solo su push su main
      uses: SamKirkland/FTP-Deploy-Action@4.3.0  # Aggiungi questa azionegit 
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/  # Specifica la cartella di build
        server-dir: /www.coditec.it/  # Percorso di destinazione sul server
